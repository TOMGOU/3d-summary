import{_ as a,c as e,o as l,V as r}from"./chunks/framework.dnpgIXFM.js";const m=JSON.parse('{"title":"shader","description":"","frontmatter":{},"headers":[],"relativePath":"pages/shader/BuiltInVariable/index.md","filePath":"pages/shader/BuiltInVariable/index.md"}'),t={name:"pages/shader/BuiltInVariable/index.md"},i=r('<h1 id="shader" tabindex="-1">shader <a class="header-anchor" href="#shader" aria-label="Permalink to &quot;shader&quot;">​</a></h1><h2 id="glsl-内置函数" tabindex="-1">glsl 内置函数 <a class="header-anchor" href="#glsl-内置函数" aria-label="Permalink to &quot;glsl 内置函数&quot;">​</a></h2><blockquote><p>官网文档地址：<a href="https://shaderific.com/glsl/variables.html" target="_blank" rel="noreferrer">https://shaderific.com/glsl/variables.html</a></p></blockquote><h3 id="着色器的内置变量" tabindex="-1">着色器的内置变量 <a class="header-anchor" href="#着色器的内置变量" aria-label="Permalink to &quot;着色器的内置变量&quot;">​</a></h3><ol><li>gl_PointSize：在点渲染模式中，控制方形点区域渲染像素大小</li><li>gl_Position：控制顶点选完的位置</li><li>gl_FragColor：片元的RGB颜色值</li><li>gl_FragCoord：片元的坐标，同样是以像素为单位</li><li>gl_PointCoord：在点渲染模式中，对应方形像素坐标</li><li>gl_FrontFacing：改变渲染物体的 Front Facing 和 Back Facing</li></ol>',5),o=[i];function s(n,d,h,c,_,g){return l(),e("div",null,o)}const u=a(t,[["render",s]]);export{m as __pageData,u as default};
