import{_ as l,E as p,c as h,m as i,J as n,w as t,V as e,a,o as k}from"./chunks/framework.V-t2EA2A.js";const q=JSON.parse('{"title":"Math 数学相关","description":"","frontmatter":{},"headers":[],"relativePath":"pages/threeJS/Math/index.md","filePath":"pages/threeJS/Math/index.md"}'),r={name:"pages/threeJS/Math/index.md"},d=e(`<h1 id="math-数学相关" tabindex="-1">Math 数学相关 <a class="header-anchor" href="#math-数学相关" aria-label="Permalink to &quot;Math 数学相关&quot;">​</a></h1><h2 id="_1-向量相关" tabindex="-1">1.向量相关 <a class="header-anchor" href="#_1-向量相关" aria-label="Permalink to &quot;1.向量相关&quot;">​</a></h2><h3 id="基础知识" tabindex="-1">基础知识 <a class="header-anchor" href="#基础知识" aria-label="Permalink to &quot;基础知识&quot;">​</a></h3><ul><li>向量在图形学中的表示</li></ul><blockquote><p>向量可以用其次坐标来表示</p></blockquote><p>A = $$\\begin{bmatrix} X\\ Y\\ \\end{bmatrix}$$</p><blockquote><p>向量的转置</p></blockquote><p>$$ A^T $$ = $$\\begin{bmatrix} X&amp;Y\\ \\end{bmatrix}$$</p><blockquote><p>向量长度的计算</p></blockquote><p>$$||\\vec A||$$ = $$\\sqrt{X^2+Y^2}$$</p><ul><li>向量相加（add）: 平行四边形法则或者三角形法则</li></ul><h3 id="向量的运算" tabindex="-1">向量的运算 <a class="header-anchor" href="#向量的运算" aria-label="Permalink to &quot;向量的运算&quot;">​</a></h3><h4 id="a-向量点乘-dot" tabindex="-1">a.向量点乘（dot） <a class="header-anchor" href="#a-向量点乘-dot" aria-label="Permalink to &quot;a.向量点乘（dot）&quot;">​</a></h4><p>$$\\vec a$$ · $$\\vec b$$ = $$||\\vec a||||\\vec b||cos\\theta$$</p><blockquote><p>向量点乘后得到的结果是一个数值</p></blockquote><ul><li>for 2D</li></ul><p>$$\\vec a$$ · $$\\vec b$$ = $$\\begin{bmatrix} x_a\\ y_a\\ \\end{bmatrix}$$ · $$\\begin{bmatrix} x_b\\ y_b\\ \\end{bmatrix}$$ = $$x_ax_b$$ + $$y_ay_b$$</p><ul><li>for 3D</li></ul><p>$$\\vec a$$ · $$\\vec b$$ = $$\\begin{bmatrix} x_a\\ y_a\\ z_a\\ \\end{bmatrix}$$ · $$\\begin{bmatrix} x_b\\ y_b\\ z_b\\ \\end{bmatrix}$$ = $$x_ax_b$$ + $$y_ay_by$$ + $$z_az_b$$</p><blockquote><p>几何意义:</p></blockquote><ul><li><p>表征或计算两个向量之间的夹角：如果向量 a 和 b 是单位向量，$$cos\\theta$$ = $$\\vec a$$ · $$\\vec b$$</p></li><li><p>b 向量在 a 向量方向上的投影</p></li></ul><blockquote><p>向量点乘在图形学中的实际应用</p></blockquote><ul><li><p>计算两个向量的夹角：比如计算光照方向和物体表面之间的夹角</p></li><li><p>投影阴隐的计算</p></li><li><p>把一个向量分解为两个垂直方向上的向量</p></li><li><p>向量点乘的正负可以表示两个向量的方向是否接近：比如金属的高光反射，不接近就看不到反射的光。</p></li></ul><blockquote><p>向量点乘满足交化率结合律和分配率</p></blockquote><h4 id="b-向量叉乘-cross" tabindex="-1">b.向量叉乘（cross） <a class="header-anchor" href="#b-向量叉乘-cross" aria-label="Permalink to &quot;b.向量叉乘（cross）&quot;">​</a></h4><p>$$\\vec a$$ x $$\\vec b$$ = $$||\\vec a||||\\vec b||sin\\theta$$</p><blockquote><p>向量点乘后得到的结果是一个向量</p></blockquote><ul><li>数字大小</li></ul><p>$$\\vec a$$ x $$\\vec b$$ = $$\\begin{bmatrix} y_az_b - y_bz_a\\ z_ax_b - x_az_b\\ x_ay_b - y_ax_b\\ \\end{bmatrix}$$ = $$\\begin{bmatrix} 0&amp;-z_a&amp;y_a\\ z_a&amp;0&amp;-x_a\\ -y_a&amp;x_a&amp;0\\ \\end{bmatrix}$$$$\\begin{bmatrix} x_b\\ y_b\\ z_b\\ \\end{bmatrix}$$</p><ul><li>行列式推导过程：<a href="https://blog.csdn.net/qq_36286039/article/details/124141634" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_36286039/article/details/124141634</a></li></ul><ul><li>方向：右手螺旋定则</li></ul><p>$$\\vec X$$ x $$\\vec Y$$ = +$$\\vec Z$$</p><p>$$\\vec Y$$ x $$\\vec X$$ = -$$\\vec Z$$</p><blockquote><p>几何意义</p></blockquote><ul><li><p>方向的意义：可以通过两个向量的叉乘，生成第三个垂直于a，b的法向量，从而构建X、Y、Z坐标系</p></li><li><p>数值的意义：在二维空间中，叉乘还有另外一个几何意义就是：aXb等于由向量a和向量b构成的平行四边形的面积。</p></li></ul><blockquote><p>向量点乘在图形学中的实际应用</p></blockquote><ul><li><p>判定左和右：比如判断向量 a 在向量 b 的左侧还是右侧</p></li><li><p>判定里和外：比如判断一个点是否在一个三角形的内部</p></li><li><p>面积计算：比如计算复杂几何体的表面积</p></li></ul><blockquote><p>向量点乘不满足交化率，但是满足结合律和分配率</p></blockquote><h2 id="_2-矩阵相关" tabindex="-1">2.矩阵相关 <a class="header-anchor" href="#_2-矩阵相关" aria-label="Permalink to &quot;2.矩阵相关&quot;">​</a></h2><blockquote><p>矩阵乘法口诀：左取行，右取列，相乘再相加，行列定位置。</p></blockquote><blockquote><p>向量点乘不满足交化率，但是满足结合律和分配率</p></blockquote><h3 id="a-矩阵乘法合法性" tabindex="-1">a.矩阵乘法合法性 <a class="header-anchor" href="#a-矩阵乘法合法性" aria-label="Permalink to &quot;a.矩阵乘法合法性&quot;">​</a></h3><p>A = $$\\begin{bmatrix} 2&amp;4\\ 6&amp;8\\ -2&amp;-3\\ \\end{bmatrix}$$</p><p>B = $$\\begin{bmatrix} 2&amp;4&amp;6&amp;1\\ 6&amp;4&amp;1&amp;3\\ \\end{bmatrix}$$</p><p>我们能不能把它们相乘得到 AB 必须满足一个条件：A 矩阵的列数必须等于 B 矩阵的行数。</p><h3 id="b-矩阵的转置" tabindex="-1">b.矩阵的转置 <a class="header-anchor" href="#b-矩阵的转置" aria-label="Permalink to &quot;b.矩阵的转置&quot;">​</a></h3><ul><li>行列转置</li></ul><p>$$\\begin{bmatrix} 2&amp;4&amp;1\\ 6&amp;5&amp;3\\ \\end{bmatrix}^T$$ = $$\\begin{bmatrix} 2&amp;6\\ 4&amp;5\\ 1&amp;3\\ \\end{bmatrix}$$</p><ul><li>特性</li></ul><p>$$(AB)^T = B^TA^T$$</p><h3 id="c-矩阵在图形学中的实际应用" tabindex="-1">c.矩阵在图形学中的实际应用 <a class="header-anchor" href="#c-矩阵在图形学中的实际应用" aria-label="Permalink to &quot;c.矩阵在图形学中的实际应用&quot;">​</a></h3><ul><li><p>矩阵乘以向量：向量必须是一个列向量，实际就是我们的变换。</p></li><li><p>矩阵乘法结合律：比如视图矩阵乘以投影矩阵。</p></li></ul><h3 id="d-矩阵变换" tabindex="-1">d.矩阵变换 <a class="header-anchor" href="#d-矩阵变换" aria-label="Permalink to &quot;d.矩阵变换&quot;">​</a></h3><ul><li>平移</li></ul><h1 id="begin-bmatrix-1-0-0-t-x-0-1-0-t-y-0-0-1-t-z-0-0-0-1-end-bmatrix-begin-bmatrix-x-y-z-1-end-bmatrix" tabindex="-1">$$\\begin{bmatrix} 1&amp;0&amp;0&amp;t_x\\ 0&amp;1&amp;0&amp;t_y\\ 0&amp;0&amp;1&amp;t_z\\ 0&amp;0&amp;0&amp;1\\ \\end{bmatrix}$$ * $$\\begin{bmatrix} x\\ y\\ z\\ 1\\ \\end{bmatrix}$$ <a class="header-anchor" href="#begin-bmatrix-1-0-0-t-x-0-1-0-t-y-0-0-1-t-z-0-0-0-1-end-bmatrix-begin-bmatrix-x-y-z-1-end-bmatrix" aria-label="Permalink to &quot;$$\\begin{bmatrix}
1&amp;0&amp;0&amp;t_x\\\\
0&amp;1&amp;0&amp;t_y\\\\
0&amp;0&amp;1&amp;t_z\\\\
0&amp;0&amp;0&amp;1\\\\
\\end{bmatrix}$$
*
$$\\begin{bmatrix}
x\\\\
y\\\\
z\\\\
1\\\\
\\end{bmatrix}$$&quot;">​</a></h1><p>$$\\begin{bmatrix} x+t_x\\ y+t_y\\ z+t_z\\ 1\\ \\end{bmatrix}$$</p><ul><li>缩放</li></ul><h1 id="begin-bmatrix-s-x-0-0-0-0-s-y-0-0-0-0-s-z-0-0-0-0-1-end-bmatrix-begin-bmatrix-x-y-z-1-end-bmatrix" tabindex="-1">$$\\begin{bmatrix} s_x&amp;0&amp;0&amp;0\\ 0&amp;s_y&amp;0&amp;0\\ 0&amp;0&amp;s_z&amp;0\\ 0&amp;0&amp;0&amp;1\\ \\end{bmatrix}$$ * $$\\begin{bmatrix} x\\ y\\ z\\ 1\\ \\end{bmatrix}$$ <a class="header-anchor" href="#begin-bmatrix-s-x-0-0-0-0-s-y-0-0-0-0-s-z-0-0-0-0-1-end-bmatrix-begin-bmatrix-x-y-z-1-end-bmatrix" aria-label="Permalink to &quot;$$\\begin{bmatrix}
s_x&amp;0&amp;0&amp;0\\\\
0&amp;s_y&amp;0&amp;0\\\\
0&amp;0&amp;s_z&amp;0\\\\
0&amp;0&amp;0&amp;1\\\\
\\end{bmatrix}$$
*
$$\\begin{bmatrix}
x\\\\
y\\\\
z\\\\
1\\\\
\\end{bmatrix}$$&quot;">​</a></h1><p>$$\\begin{bmatrix} s_x·x\\ s_y·y\\ s_z·z\\ 1\\ \\end{bmatrix}$$</p><ul><li>旋转</li></ul>`,60),o=i("h1",{id:"begin-bmatrix-1-0-0-0-0-cosα-sinα-0-0-sinα-cosα-0-0-0-0-1-end-bmatrix-begin-bmatrix-x-y-z-1-end-bmatrix",tabindex:"-1"},[a("$$\\begin{bmatrix} 1&0&0&0\\ 0&cosα&-sinα&0\\ 0&sinα&cosα&0\\ 0&0&0&1\\ \\end{bmatrix}$$ * $$\\begin{bmatrix} x\\ y\\ z\\ 1\\ \\end{bmatrix}$$ "),i("a",{class:"header-anchor",href:"#begin-bmatrix-1-0-0-0-0-cosα-sinα-0-0-sinα-cosα-0-0-0-0-1-end-bmatrix-begin-bmatrix-x-y-z-1-end-bmatrix","aria-label":`Permalink to "$$\\begin{bmatrix}
1&0&0&0\\\\
0&cosα&-sinα&0\\\\
0&sinα&cosα&0\\\\
0&0&0&1\\\\
\\end{bmatrix}$$
*
$$\\begin{bmatrix}
x\\\\
y\\\\
z\\\\
1\\\\
\\end{bmatrix}$$"`},"​")],-1),b=i("p",null,[a("$$\\begin{bmatrix} x\\ cosα"),i("em",null,"y-sinα"),a("z\\ sinα"),i("em",null,"y+cosα"),a("z\\ 1\\ \\end{bmatrix}$$")],-1),$=i("h1",{id:"begin-bmatrix-cosα-0-sinα-0-0-1-0-0-sinα-0-cosα-0-0-0-0-1-end-bmatrix-begin-bmatrix-x-y-z-1-end-bmatrix",tabindex:"-1"},[a("$$\\begin{bmatrix} cosα&0&-sinα&0\\ 0&1&0&0\\ sinα&0&cosα&0\\ 0&0&0&1\\ \\end{bmatrix}$$ * $$\\begin{bmatrix} x\\ y\\ z\\ 1\\ \\end{bmatrix}$$ "),i("a",{class:"header-anchor",href:"#begin-bmatrix-cosα-0-sinα-0-0-1-0-0-sinα-0-cosα-0-0-0-0-1-end-bmatrix-begin-bmatrix-x-y-z-1-end-bmatrix","aria-label":`Permalink to "$$\\begin{bmatrix}
cosα&0&-sinα&0\\\\
0&1&0&0\\\\
sinα&0&cosα&0\\\\
0&0&0&1\\\\
\\end{bmatrix}$$
*
$$\\begin{bmatrix}
x\\\\
y\\\\
z\\\\
1\\\\
\\end{bmatrix}$$"`},"​")],-1),m=i("p",null,[a("$$\\begin{bmatrix} cosα"),i("em",null,"x+sinα"),a("z\\ y\\ -sinα"),i("em",null,"x+cosα"),a("z\\ 1\\ \\end{bmatrix}$$")],-1),E=e(`<h1 id="begin-bmatrix-cosα-sinα-0-0-sinα-cosα-0-0-0-0-1-0-0-0-0-1-end-bmatrix-begin-bmatrix-x-y-z-1-end-bmatrix" tabindex="-1">$$\\begin{bmatrix} cosα&amp;-sinα&amp;0&amp;0\\ sinα&amp;cosα&amp;0&amp;0\\ 0&amp;0&amp;1&amp;0\\ 0&amp;0&amp;0&amp;1\\ \\end{bmatrix}$$ * $$\\begin{bmatrix} x\\ y\\ z\\ 1\\ \\end{bmatrix}$$ <a class="header-anchor" href="#begin-bmatrix-cosα-sinα-0-0-sinα-cosα-0-0-0-0-1-0-0-0-0-1-end-bmatrix-begin-bmatrix-x-y-z-1-end-bmatrix" aria-label="Permalink to &quot;$$\\begin{bmatrix}
cosα&amp;-sinα&amp;0&amp;0\\\\
sinα&amp;cosα&amp;0&amp;0\\\\
0&amp;0&amp;1&amp;0\\\\
0&amp;0&amp;0&amp;1\\\\
\\end{bmatrix}$$
*
$$\\begin{bmatrix}
x\\\\
y\\\\
z\\\\
1\\\\
\\end{bmatrix}$$&quot;">​</a></h1><p>$$\\begin{bmatrix} cosα<em>x-sinα</em>y\\ sinα<em>x+cosα</em>y\\ z\\ 1\\ \\end{bmatrix}$$</p><h2 id="_3-欧拉对象-euler、四元数-quaternion-和旋转矩阵" tabindex="-1">3.欧拉对象 Euler、四元数 Quaternion 和旋转矩阵 <a class="header-anchor" href="#_3-欧拉对象-euler、四元数-quaternion-和旋转矩阵" aria-label="Permalink to &quot;3.欧拉对象 Euler、四元数 Quaternion 和旋转矩阵&quot;">​</a></h2><blockquote><p>欧拉对象、四元数和旋转矩阵都是用来表达对象的旋转信息。欧拉对象和四元数存在的意义：为了给旋转变换做插值。</p></blockquote><blockquote><p><a href="https://threejs.org/docs/#api/zh/math/Euler" target="_blank" rel="noreferrer">https://threejs.org/docs/#api/zh/math/Euler</a></p></blockquote><blockquote><p><a href="https://threejs.org/docs/#api/zh/math/Quaternion" target="_blank" rel="noreferrer">https://threejs.org/docs/#api/zh/math/Quaternion</a></p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Euler( x : Float, y : Float, z : Float, order : String )</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// x - (optional) 用弧度表示x轴旋转量。 默认值是 0。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// y - (optional) 用弧度表示y轴旋转量。 默认值是 0。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// z - (optional) 用弧度表示z轴旋转量。 默认值是 0。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// order - (optional) 表示旋转顺序的字符串，默认为&#39;XYZ&#39;（必须是大写）。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Euler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Euler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( Math.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Math.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;XYZ&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Euler.x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Euler.y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Euler.z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Euler.order </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;YZX&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 绕单位向量Vector3(x, y, z) 表示的轴旋转 θ 度</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// k = sinθ/2</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// q = ( xk , yk , z*k, cosθ/2)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 【下面的例子是：将点(0, 0, 1)绕 Y 轴旋转 90 度，得到新的坐标(1, 0, 0)】</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> quaternion</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Quaternion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 旋转轴 new THREE.Vector3(0, 1, 0)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 旋转角度 Math.PI / 2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> angle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">quaternion.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setFromAxisAngle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Vector3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), angle)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;查看四元数结构&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, quaternion);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(angle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;查看数组&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> k , </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> k , </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> k, Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(angle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Vector3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> );</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> newVector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vector.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">applyQuaternion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( quaternion );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;旋转后的新坐标&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, newVector)</span></span></code></pre></div>`,7);function c(g,y,x,u,F,_){const s=p("font");return k(),h("div",null,[d,i("blockquote",null,[n(s,{color:"#ff00ff",size:"12",face:"黑体"},{default:t(()=>[a("绕x轴旋转α度对应的旋转矩阵Rx")]),_:1})]),o,b,i("blockquote",null,[n(s,{color:"#ff00ff",size:"12",face:"黑体"},{default:t(()=>[a("绕y轴旋转α度对应的旋转矩阵Ry")]),_:1})]),$,m,i("blockquote",null,[n(s,{color:"#ff00ff",size:"12",face:"黑体"},{default:t(()=>[a("绕z轴旋转α度对应的旋转矩阵Rz")]),_:1})]),E])}const A=l(r,[["render",c]]);export{q as __pageData,A as default};
